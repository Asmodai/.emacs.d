;;; -*- Mode: Emacs-Lisp -*-

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(c-default-style (quote ((c-mode . "bsd") (lsl-mode . "bsd") (csharp-mode . "bsd") (c++-mode . "bsd") (cc-mode . "bsd") (objc-mode . "gnu") (java-mode . "java") (other . "gnu"))))
 '(column-number-mode t)
 '(ecb-cache-directory-contents (quote (("^/\\([^:/]*@\\)?\\([^@:/]*\\):.*" . 0) (".*" . 50) ("*.*.~*~" . 1000))))
 '(ecb-options-version "2.40")
 '(ecb-prescan-directories-for-emptyness nil)
 '(ecb-source-file-regexps (quote ((".*" nil nil))))
 '(ecb-source-path (quote (("/Users/asmodai/Documents/Projects/XHack" "XHack"))))
 '(erc-fool-highlight-type (quote all))
 '(erc-fools (quote ("\\\\(echelon\\\\)" "\\\\(silentnoise\\\\)")))
 '(erc-modules (quote (autojoin button capab-identify completion fill irccontrols list match menu move-to-prompt netsplit networks noncommands readonly ring stamp track unmorse)))
 '(erc-nick "AsmoEMACS")
 '(erc-nick-uniquifier "`")
 '(erc-pal-highlight-type (quote all))
 '(erc-pals (quote ("\\\\(booto\\\\)" "\\\\(wa1800z\\\\)" "\\\\(enstyne\\\\)" "\\\\(BSDGurl\\\\)" "\\\\(int16h\\\\)")))
 '(erc-paranoid t)
 '(erc-user-full-name "Paul")
 '(font-lock-mode t t (font-lock))
 '(gud-gdb-command-name "gdb --annotate=1")
 '(gutter-buffers-tab-visible-p t t)
 '(gutters-buffers-tab-visible-p t t)
 '(header-copyright-notice "")
 '(header-date-format t)
 '(hl-paren-background-colors nil)
 '(hl-paren-colors (quote ("firebrick1" "DarkRed" "IndianRed" "LightCoral" "Salmon" "DarkSalmon")))
 '(inhibit-startup-screen t)
 '(large-file-warning-threshold nil)
 '(paren-mode (quote paren) nil (paren))
 '(safe-local-variable-values (quote ((Package . CONCURRENCY) (Package . QUEUE) (Package . STARTUP) (Package . CONSOLE) (Package . CL-LIB) (Package . NAGIOS-EDITOR) (Lowercase . No) (muser . yes) (Package . dfs) (Package *LISP-I COMMON-LISP-GLOBAL) (PACKAGE . *sim-i) (PACKAGE . *SIM-I) (Muser . Yes) (MUSER . YES) (PACKAGE . *SIM-i) (SYNTAX . COMMON-LISP) (Muser . yes) (Package *SIM-I COMMON-LISP-GLOBAL) (Package . COLD\.CLOS) (Package . COLD\.LOW) (Package ITERATE :use "COMMON-LISP" :colon-mode :external) (syntax . COMMON-LISP) (Package . COLD\.CONDITIONS) (Package . COLD\.HIERARCHICAL) (Package . MICRO) (Package . LAMBDA) (Package . LISP-INTERNALS) (Package . SIMULATOR) (Package . VINCULUM) (Package . HARDWARE) (Package . TIME) (Package . system) (Package . CLI) (Package . EH) (Fonts cptfont hl10b) (cold-load . t) (Package . NETI) (Package . SYS\.NAMESPACES) (Package . CLOS-INTERNALS) (Package . COLD\.ZETALISP) (Package . CLIM) (Package . GRAPHICS) (Package . COLD\.EXCL) (Package . SYS\.INTERNALS\.DEVICES) (Package . SYSTEM\.IO) (Package . CLIM-LISP) (Package . CLIM-UTILS) (Package . clim-stream) (Package . CLIM-STREAM) (Package . ON-POSTSCRIPT) (Package . SILICA) (Package . CL-ENVIRONMENT) (Package . CL-NOSQL\.INDICES) (Package . CL-NOSQL\.UTILS) (Package . PORTUNES) (Package . NAGIOS\.EDITOR) (Package . JANUS) (Package . CANDY\.SYS) (Package . DARK-HERESY) (Package . HUNCHENTOOT) (Package . dark-heresy) (folded-file . t) (Fonts . CPTFONT\,CPTFONTI\,CPTFONTCB) (Package . dw) (Fill . Yes) (auto-fill-mode . Yes) (Package . TERMINAL-DRIVER) (Package . System-internals) (Package . UT) (Package . COMMAND-PROCESSOR) (Package . DYNAMIC-TTY) (Package . XLIB) (Package . NULISP-COLD) (Package ARCH :use CL) (Package . NULISP) (Package . NULISP-INTERNALS) (Package . LISP-MACHINE) (Readtable . ZL) (Package . MACINTOSH-INTERNALS) (Package . RPC) (Syntax . Lisp+C) (Package . TCP) (Default-character-style :fix :roman :normal) (Syntax . ansi-common-lisp) (Patch-File . Yes) (Package . NETWORK-INTERNALS) (Package . FLAVOR) (Package . DIS) (Package . FED) (Package . C-user) (Package . CLtL-Internals) (Package . user) (Syntax . common-lisp) (Package ddex :use SCL) (Package . COMMON-LISP-INTERNALS) (Package . JOSHUA-INTERNALS) (Package . Nsage) (Package . SCT) (Package . NSAGE) (Package . http) (Syntax . Ansi-Common-Lisp) (Package . FTP) (Readtable . CL) (Package WHY-PC GLOBAL) (Package . CL-NAMESPACE) (Package . CL-STARTUP) (Package . DYNAMIC-WINDOWS) (Package . CLUEI) (Fonts CPTFONT HL10B) (Fonts TR12 HL12B TR12I CPTFONT HL10 CPTFONTB) (Cold-Load . t) (Package . SYS) (Cold-load . T) (Fonts Cptfont Cptfontb Hl12bi Cptfont Medfnb) (Fonts Cptfont Cptfontb Hl12bi) (Package . Name) (Cold-Load . T) (Package . NAME) (Package . CL-HACKS-CLOS) (Package . CL-HACKS-FAD) (Package . CL-HACKS-UUID) (Package . CL-FAD) (Package . CL-HACKS-INTERNALS) (rcs-header . "$Header: /hope/lwhope1-cam/hope.0/compound/63/LISPparsergen/RCS/defsys.lisp,v 1.9.13.1 2009/08/21 21:14:37 davef Exp $") (rcs-header . "$Header: /hope/lwhope1-cam/hope.0/compound/63/LISPeditor/RCS/shell-defsys.lisp,v 1.1.15.1 2009/08/21 21:12:51 davef Exp $") (rcs-header . "$Header: /hope/lwhope1-cam/hope.0/compound/42/LISPccl/RCS/prof-defsys.lisp,v 1.7.1.1 2009/08/21 21:12:19 davef Exp $") (Package . CL-HACKS-MOP) (Package . CL-MUD) (Package . DOMAIN-NAME-SYSTEM) (Package . NEKO) (Fonts CPTFONT HL12B HL12I) (Package . FILE-SYSTEM) (Package . DEMO) (Fonts medfnt hl12b) (Font . CPTFONT) (Package REMIND :size 100) (Fonts CPTFONT HL12BI HL12B) (Package . CP) (Package . IVT) (Fonts cptfont HL12B HL12BI) (Package . TELNET) (Fonts MEDFNT MEDFNB HL12B) (Fonts CPTFONT HL10B TR10BI TR10I) (Fonts MEDFNB hl12B hl12bi) (Fonts MEDFNB HL12B HL12BI) (Package . X11) (Package . UA) (Readtable . T) (Fonts CPTFONT CPTFONTB) (\1Mode . Common-Lisp) (\*cold-load . t) (Package . Compiler2) (FONTS cptfont hl10b) (PACKAGE . user) (BASE . 10) (Package . System-Internals) (Package . LT) (Package . Common-lisp-internals) (Package . FCLI) (movitz-mode . t) (Package . COMPILER) (TeX-master . t) (Package . SCHEME-USER) (Fonts CPTFONT HL10B HL12BI) (Package . UCL) (Package . Scheme) (Patch-file . T) (Fonts CPTFONT HL12B HL12BI) (Package . SI) (Patch-file) (Fonts CPTFONT CPTFONTB HL12BI) (Package . Compiler) (Package . c-system) (Package . SYSTEM-APPLICATIONS) (Package . FS) (Fonts MEDFNT HL12B HL12I MEDFNB) (Fonts . CPTFONT\,HL12B\,HL12BI) (Package . TV) (Patch-File . t) (Fonts cptfont) (Package . Net) (Fonts CPTFONT HL12 HL12BI CPTFONTB) (Package . W) (Fonts CPTFONT HL12 TR12I COURIER ADOBE-COURIER14B HL12B CPTFONTBI) (Vsp . 0) (Fonts MEDFNT HL12B HL12BI) (Fonts . hl12\,HL12B\,HL12BI) (Fonts . cptfont\,HL12\,HL12BI\,cptfontb) (Package . User) (Package "CONDITIONS" :USE "LISP" :SHADOW ("BREAK" "ERROR" "CERROR" "SIGNAL" "CHECK-TYPE" "ASSERT" "ETYPECASE" "CTYPECASE" "ECASE" "CCASE" "IGNORE-ERRORS" "MAKE-CONDITION" "WARN" "*BREAK-ON-WARNINGS*")) (Package . X-SCREEN) (Package . ZETALISP-USER) (Package . CLEAT\.DATASTORE\.UTILS) (Package . ZETALISP) (Package color-palette) (Patch-File . T) (Package . CLEAT\.DATASTORE\.INDICES) (Package . CLEAT\.DATASTORE\.XML-IMPORT/EXPORT) (Package . CLEAT\.DATASTORE\.XML-IMPORTER) (Package . CLEAT\.DATASTORE\.XML) (Package . CLEAT\.DATASTORE\.DATA) (Package . DATASTORE) (Package . COLOR) (Syntax . ZETALISP) (Package . SYSTEM-INTERNALS) (Package . POSTSCRIPT) (Package . DBFS) (Package . SPITFIRE-CORE) (Package . cl-user) (Package . SPITFIRE-WINDOWS) (Package . RUNES) (Package . CCL) (Package . ccl) (Base . 8) (Package . ZWEI) (Syntax . Zetalisp) (Package . CURSES) (Package . DREI-BUFFER) (Package . METASIM-CLIM) (Package . CLIM-USER) (Package . CLIM-INTERNALS) (Syntax . Common-lisp) (Package . CL-DOC) (Package . TERMINFO) (Syntax . ANSI-Common-Lisp) (Package . METASIM-UTILS) (Package . CL-HACKS) (eval add-hook (quote write-file-hooks) (quote time-stamp)) (Package . COMMON-LISP-USER) (Syntax . COMMON-LISP) (Package . Destiny) (Package . DESTINY) (Package . METASIM) (Lowercase . Yes) (Package . CL-USER) (Syntax . ANSI-COMMON-LISP) (Lowercase . T) (Package . USER) (Package . C-SYSTEM) (Base . 10) (Syntax . Common-Lisp))))
 '(show-paren-mode t)
 '(tool-bar-mode nil)
 '(toolbar-captioned-p nil)
 '(url-be-asynchronous t)
 '(url-personal-mail-address "asmodai@gmail.com")
 '(url-privacy-level (quote (os agent)))
 '(user-full-name "Paul Ward")
 '(user-mail-address "asmodai@gmail.com")
 '(user-url-address "http://unixware.kicks-ass.org/" t)
 '(w3-default-homepage "http://localhost/")
 '(widget-mouse-face (quote custom-button-mouse))
 '(yaoddmuse-wikis (quote (("HAKMEM" "http://127.0.0.1/cgi-bin/wiki.pl" utf-8 "")))))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Ubuntu Mono" :size 9 :height 90 :background "#0e0412" :foreground "#c4b1cb"))))
 '(about-headling-face ((t (:foreground "hotpink" :bold t))))
 '(about-link-face ((t (:foreground "steelblue" :underline t))))
 '(blank-space-face ((t (nil))))
 '(blank-tab-face ((t (nil))))
 '(blue ((t (:foreground "blue"))))
 '(bold ((t (:bold t))))
 '(bold-italic ((t (:italic t :bold t))))
 '(border ((t (nil))))
 '(border-glyph ((t (nil))))
 '(buffers-tab ((t (:background "gray65" :foreground "black" :bold t))))
 '(button ((t (:inherit custom-button))))
 '(calendar-today-face ((t (:foreground "hotpink" :bold t))))
 '(company-tooltip ((t (:background "gray15" :box (:line-width 1 :color "grey5" :style released-button)))))
 '(company-tooltip-common ((t (:inherit company-tooltip :foreground "orange4"))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :foreground "goldenrod"))))
 '(company-tooltip-selection ((t (:inherit company-tooltip :foreground "white"))))
 '(cperl-array-face ((t (:foreground "skyblue" :bold t))))
 '(cperl-hash-face ((t (:foreground "hotpink" :bold t))))
 '(cperl-here-face ((t (:foreground "green" :background "grey25" :bold t))))
 '(cperl-invalid-face ((t (:background "red"))))
 '(cperl-nonoverridable-face ((t (:foreground "chartreuse3"))))
 '(cperl-pod-face ((t (:foreground "firebrick"))))
 '(cperl-pod-head-face ((t (:foreground "green3"))))
 '(cursor ((t (:background "green3"))))
 '(custom-button ((t (:background "#3b124e" :foreground "#a2a244" :box (:line-width 1 :color "#230b2f" :style released-button)))))
 '(custom-button-mouse ((t (:background "#651f86" :foreground "white" :box (:line-width 1 :style released-button)))))
 '(custom-button-pressed ((t (:inherit custom-button :foreground "white" :box (:line-width 1 :style pressed-button)))))
 '(custom-button-pressed-unraised ((t (:inherit custom-button-unraised :foreground "white"))))
 '(custom-button-unraised ((t (:inherit custom-button :box nil))))
 '(custom-changed ((t (:foreground "white" :background "royalblue" :bold t))))
 '(custom-comment ((t (:inherit font-lock-comment-face))))
 '(custom-comment-tag ((t (:inherit font-lock-comment-face :underline t))))
 '(custom-documentation ((t (:inherit font-lock-comment-face :slant italic))))
 '(custom-face-tag ((t (:foreground "royalblue"))))
 '(custom-group-tag ((t (:underline t :foreground "cadetblue"))))
 '(custom-group-tag-1 ((t (:foreground "royalblue" :weight bold :height 1.2))))
 '(custom-invalid ((t (:foreground "yellow" :background "red"))))
 '(custom-modified ((t (:foreground "white" :background "blue"))))
 '(custom-rogue ((t (:foreground "pink" :background "black"))))
 '(custom-saved ((t (:underline t))))
 '(custom-set ((t (:foreground "blue" :background "white"))))
 '(custom-state ((t (:foreground "goldenrod3"))))
 '(custom-variable-button ((t (:inherit font-lock-variable-name-face))))
 '(custom-variable-tag ((t (:underline t :foreground "mediumorchid"))))
 '(cyan ((t (:foreground "cyan"))))
 '(dired-face-directory ((t (:bold t))))
 '(erc-capab-identify-unidentified ((t (:foreground "firebrick"))))
 '(erc-current-nick-face ((t (:foreground "turquoise" :bold t))))
 '(erc-header-line ((t (:background "gray30" :foreground "gray70"))))
 '(erc-input-face ((t (:foreground "cadetblue"))))
 '(erc-my-nick-face ((t (:foreground "cadetblue" :bold t))))
 '(erc-nick-default-face ((t (:bold t))))
 '(erc-pal-face ((t (:foreground "darkmagenta" :bold t))))
 '(erc-prompt-face ((t (:background "black" :foreground "lightblue2" :bold t))))
 '(erc-timestamp-face ((t (:foreground "green4" :bold t))))
 '(error ((t (:foreground "darkred" :weight bold))))
 '(font-latex-verbatim-face ((t (:foreground "salmon" :bold t))))
 '(font-lock-builtin-face ((t (:foreground "#af51dc"))))
 '(font-lock-comment-delimiter-face ((t (:foreground "#2c435f"))))
 '(font-lock-comment-face ((t (:foreground "#669bcd"))))
 '(font-lock-constant-face ((t (:foreground "#bc962e"))))
 '(font-lock-doc-face ((t (:foreground "#669bcd"))))
 '(font-lock-function-name-face ((t (:foreground "#c4a259" :bold t))))
 '(font-lock-keyword-face ((t (:foreground "#e99487"))))
 '(font-lock-negation-char-face ((t (:background "grey10" :foreground "firebrick"))))
 '(font-lock-preprocessor-face ((t (:foreground "#7e2e89"))))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "grey50" :bold t))))
 '(font-lock-string-face ((t (:foreground "#87b53c"))))
 '(font-lock-type-face ((t (:foreground "#d18649"))))
 '(font-lock-variable-name-face ((t (:foreground "#ede769" :bold t))))
 '(font-lock-warning-face ((t (:foreground "red" :bold t))))
 '(fringe ((t (:foreground "grey40" :background "grey7"))))
 '(green ((t (:foreground "green"))))
 '(gui-button-face ((t (:inherit custom-button))))
 '(gui-element ((t (:background "gray80"))))
 '(header-line ((t (:inherit mode-line :foreground "white"))))
 '(highlight ((t (:inherit secondary-selection))))
 '(highlight-changes-delete-face ((t (:underline t :foreground "red"))))
 '(highlight-changes-face ((t (:foreground "red"))))
 '(highline-face ((t (:background "grey95"))))
 '(hyper-apropos-documentation ((t (:foreground "forestgreen"))))
 '(hyper-apropos-heading ((t (:bold t :foreground "skyblue"))))
 '(hyper-apropos-hyperlink ((t (:foreground "slateblue" :underline t))))
 '(hyper-apropos-major-heading ((t (:foreground "steelblue" :bold t))))
 '(hyper-apropos-section-heading ((t (:foreground "cadetblue" :bold t))))
 '(hyper-apropos-warning ((t (:foreground "red" :bold t))))
 '(ibuffer-occur-match-face ((t (:foreground "firebrick"))))
 '(info-menu-header ((t (:inherit info-title-4 :weight bold))))
 '(info-node ((t (:foreground "steelblue"))))
 '(info-title-1 ((t (:inherit info-title-2 :height 1.2))))
 '(info-title-2 ((t (:inherit info-title-3 :height 1.2))))
 '(info-title-3 ((t (:inherit info-title-4 :height 1.2))))
 '(info-title-4 ((t (:inherit default :weight bold :height 1.2))))
 '(info-xref ((t (:inherit link))))
 '(info-xref-visited ((t (:inherit link-visited))))
 '(isearch ((t (:background "gray10" :foreground "azure4"))))
 '(isearch-fail ((t (:foreground "red" :bold t))))
 '(isearch-secondary ((t (:foreground "red3"))))
 '(italic ((t (:italic t))))
 '(lazy-highlight ((t (:background "gray20" :foreground "aquamarine"))))
 '(linemenu-face ((t (nil))))
 '(link ((t (:foreground "slateblue" :underline t))))
 '(link-visited ((t (:foreground "magenta3" :underline t))))
 '(magenta ((t (:foreground "magenta"))))
 '(man-italic ((t (:foreground "blanchedalmond" :italic t))))
 '(menu ((t (:inherit header-line))))
 '(minibuffer-prompt ((t (:foreground "purple"))))
 '(mode-line ((t (:insert mode-line))))
 '(mode-line-buffer-id ((t (:foreground "#35dc5d"))))
 '(mode-line-highlight ((t (:inherit link :box nil :underline nil))))
 '(mode-line-inactive ((t (:background "#160a1e" :foreground "#51502f" :box (:line-width 1 :color "#230b2f" :style released-button)))))
 '(modeline ((t (:insert mode-line))))
 '(modeline-mousable ((t (:background "#1a0a25" :foreground "#61331a"))))
 '(modeline-mousable-minor-mode ((t (:background "#1a0a25" :foreground "#611a1a"))))
 '(primary-selection ((t (:background "#171725" :foreground "turquoise"))))
 '(red ((t (:foreground "red"))))
 '(region ((t (:background "#171725" :foreground "yellow"))))
 '(right-margin ((t (nil))))
 '(secondary-selection ((t (:background "#171725" :foreground "paleturquoise"))))
 '(semantic-decoration-on-fileless-includes ((t (:background "#13191c"))))
 '(semantic-decoration-on-private-members-face ((t (:background "#231021"))))
 '(semantic-decoration-on-protected-members-face ((t (:background "#010520"))))
 '(semantic-decoration-on-unknown-includes ((t (:background "#2f0101"))))
 '(semantic-decoration-on-unparsed-includes ((t (:background "#1c151e"))))
 '(semantic-highlight-edits-face ((t (:background "#001205"))))
 '(semantic-highlight-func-current-tag-face ((t (:background "#171717"))))
 '(senator-momentary-highlight-face ((t (:background "#202020"))))
 '(senator-read-only-face ((t (:background "#190102"))))
 '(show-paren-match ((((min-colors 256)) (:background "gray15" :foreground "lawngreen" :bold t)) (((min-colors 8)) (:foreground "green" :bold t))))
 '(show-paren-mismatch ((((min-colors 256)) (:background "gray15" :foreground "red" :bold t)) (((min-colors 8)) (:foreground "red" :bold t))))
 '(sldb-restart-number-face ((t (:bold t))))
 '(slime-inspector-value-face ((t (:foreground "mediumblue" :bold t))))
 '(slime-reader-conditional-face ((t (:foreground "DimGray" :bold t))))
 '(slime-repl-input-face ((t (:bold t))))
 '(slime-repl-output-mouseover-face ((t (:bold t))))
 '(speedbar-button-face ((t (:inherit custom-button))))
 '(speedbar-directory-face ((t (:foreground "royalblue"))))
 '(speedbar-file-face ((t (:foreground "cadetblue"))))
 '(speedbar-highlight-face ((t (:inherit secondary-selection))))
 '(speedbar-selected-face ((t (:inherit custom-button-mouse))))
 '(speedbar-separator-face ((t (:background "blue" :foreground "white" :box (:line-width 1 :color "darkblue" :style released-button)))))
 '(text-cursor ((t (:background "green3"))))
 '(tool-bar ((t (:inherit header-line))))
 '(toolbar ((t (:inherit toolbar))))
 '(tooltip ((t (:background "lightyellow" :foreground "black"))))
 '(underline ((t (:underline t))))
 '(vcursor ((t (:background "lawngreen"))))
 '(vertical-divider ((t (:background "gray70" :foreground "black"))))
 '(white ((t (:foreground "white"))))
 '(widget-button ((t (:inherit custom-button))))
 '(widget-button-pressed ((t (:inherit custom-button-pressed))))
 '(widget-documentation ((t (:inherit custom-documentation))))
 '(widget-field ((t (:background "gray15"))))
 '(widget-inactive ((t (:foreground "gray40" :background "gray10"))))
 '(widget-single-line-field ((t (:background "gray15"))))
 '(yellow ((t (:foreground "yellow"))))
 '(zmacs-region ((t (:background "gray20" :foreground "yellow")))))
